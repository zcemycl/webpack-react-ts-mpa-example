name: Deploy Bicep Scripts Selectively

resources:
- repo: self

parameters:
  - name: createdBy
    displayName: 'Created By: '
    type: string
    default: 'Leo-Leung'

  - name: location
    displayName: 'Location: '
    type: string
    default: 'eastus'

  - name: projectName
    displayName: 'Project Name: '
    type: string
    default: 'Learn-Azure'

  - name: acrName
    displayName: 'Azure Container Registry Name: '
    type: string
    default: 'acrleotest910'

  - name: webAppName
    displayName: 'Azure App Service Name: '
    type: string
    default: 'acrleoapp910'

  - name: dockerImage
    displayName: 'Docker Image Name: '
    type: string
    default: 'bicep-app-service-container:latest'

  - name: hookName
    displayName: 'Azure Webhook Name: '
    type: string
    default: 'webhook1'

  - name: rsManageName
    displayName: 'Azure Resource Management Service Connection Name: '
    type: string
    default: 'rm-service-conn'

  - name: rsManageNewOrExisting
    displayName: 'deploy new Resource Management Service Connection or not'
    type: string
    default: existing
    values:
    - new
    - existing

  - name: acrNewOrExisting
    displayName: 'deploy new Azure Container Registry or not'
    type: string
    default: existing
    values:
    - new
    - existing

  - name: apsNewOrExisting
    displayName: 'deploy new Azure App Service or not'
    type: string
    default: existing
    values:
    - new
    - existing

  - name: webhookNewOrExisting
    displayName: 'deploy new Azure Webhook or not'
    type: string
    default: existing
    values:
    - new
    - existing

  - name: org
    displayName: 'Organisation: '
    type: string
    default: https://dev.azure.com/leoleung0900/

  - name: proj
    displayName: 'Project Name: '
    type: string
    default: leo-test-app

  - name: rg
    displayName: 'Resource Group: '
    type: string
    default: leo-ml-test

## need to set as secrets
## spid: app id/ service principal id
## si: subscription id
## tid: tenant id
## spkey: password service principal
## pat: personal access token

steps:
- ${{ if eq(parameters.rsManageNewOrExisting, 'new') }}:
  - script: | 
      az devops service-endpoint azurerm create  \
        --azure-rm-service-principal-id $(SPID) \
        --azure-rm-subscription-id $(SI) \
        --azure-rm-subscription-name Pay-As-You-Go \
        --azure-rm-tenant-id $(TID) \
        --name ${{ parameters.rsManageName }} \
        --org ${{ parameters.org }} \
        --p ${{ parameters.proj }}
      sleep 60
      epId=`az devops service-endpoint list --org ${{ parameters.org }} --p ${{ parameters.proj }} --query "[?name=='${{ parameters.rsManageName }}'].id" -o tsv` && echo $epId
      az devops service-endpoint update \
        --id $epId --enable-for-all true \
        --org ${{ parameters.org }} \
        --p ${{ parameters.proj }}
    displayName: Create Service Connection
    env: 
      AZURE_DEVOPS_EXT_AZURE_RM_SERVICE_PRINCIPAL_KEY: $(SPKEY)
      AZURE_DEVOPS_EXT_PAT: $(PAT)

- ${{ if eq(parameters.acrNewOrExisting, 'new') }}:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: Deploy container registry
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.rsManageName }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.rg }}
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: './infrastructure/bicep/main.bicep'
      overrideParameters: -acrNewOrExisting ${{ parameters.acrNewOrExisting }}
        -acrName ${{ parameters.acrName }}
        -createdBy ${{ parameters.createdBy }}
        -projectName ${{ parameters.projectName }}
      deploymentMode: 'Incremental'
      deploymentName: 'DeployPipelineTemplate'
  
- task: AzureCLI@2
  displayName: build and push image to acr
  inputs:
    azureSubscription: ${{ parameters.rsManageName }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      docker --version
      LOGIN=$(az acr login --name ${{ parameters.acrName }} --expose-token)
      ACR_ACCESS_TOKEN=$(echo $LOGIN | jq -r '.accessToken')
      ACR_LOGIN_SERVER=$(echo $LOGIN | jq -r '.loginServer')
      docker login $ACR_LOGIN_SERVER --username 00000000-0000-0000-0000-000000000000 --password $ACR_ACCESS_TOKEN
      docker build -t test .
      docker images
      docker tag test:latest $ACR_LOGIN_SERVER/${{ parameters.dockerImage }}
      docker push $ACR_LOGIN_SERVER/${{ parameters.dockerImage }}
    
- ${{ if eq(parameters.apsNewOrExisting, 'new') }}:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: Deploy app service
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.rsManageName }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.rg }}
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: './infrastructure/bicep/main.bicep'
      overrideParameters: -apsNewOrExisting ${{ parameters.apsNewOrExisting }}
        -webAppName ${{ parameters.webAppName }} 
        -dockerRegistryHost ${{ parameters.acrName }}.azurecr.io
        -dockerImage ${{ parameters.dockerImage }}
        -createdBy ${{ parameters.createdBy }}
        -projectName ${{ parameters.projectName }}
      deploymentMode: 'Incremental'
      deploymentName: 'DeployPipelineTemplate'

- ${{ if eq(parameters.webhookNewOrExisting, 'new') }}:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: Deploy webhook
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.rsManageName }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.rg }}
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: './infrastructure/bicep/main.bicep'
      overrideParameters: -webhookNewOrExisting ${{ parameters.webhookNewOrExisting }}
        -webAppName ${{ parameters.webAppName }} 
        -acrName ${{ parameters.acrName }}
        -hookName ${{ parameters.hookName }}
        -dockerImage ${{ parameters.dockerImage }}
      deploymentMode: 'Incremental'
      deploymentName: 'DeployPipelineTemplate'


