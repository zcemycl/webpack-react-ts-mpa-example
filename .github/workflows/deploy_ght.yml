name: Deploy AWS Resources by Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with: 
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false
    
      - name: Terraform Init
        id: init
        working-directory: ./infrastructure/terraform/aws
        run: terraform init
        
      - name: Terraform Validate
        id: validate
        working-directory: ./infrastructure/terraform/aws
        run: terraform validate -no-color
        
      - name: Terraform Apply
        id: apply
        working-directory: ./infrastructure/terraform/aws
        run: |
          terraform apply -auto-approve
          ECR_ID=$(terraform output --raw ecr_registry_id)
          # echo "::add-mask::$ECR_ID"
          echo "::set-output name=ECR_ID::$ECR_ID"
          ECR_REPO_URL=$(terraform output --raw ecr_repo_url)
          # echo "::add-mask::$ECR_REPO_URL"
          echo "::set-output name=ECR_REPO_URL::$ECR_REPO_URL"
      
      - name: Terraform Info
        working-directory: ./infrastructure/terraform/aws
        run: |
          terraform output ecr_repo_url
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.apply.outputs.ECR_REPO_URL }}
        run: |
          echo $ECR_REGISTRY
          docker build -t $ECR_REGISTRY:latest .
          docker push $ECR_REGISTRY:latest
          
          
