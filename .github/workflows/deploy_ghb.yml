name: Deploy Bicep Scripts

on: 
  push:
    branches: 
      - 'main'

jobs:
  acr-app-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: deploy acr
        id: deploy-acr
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./infrastructure/bicep/main.bicep
          parameters: ./infrastructure/ghb/deploy-acr.json
          failOnStdErr: false

      - name: login acr
        id: acr-login
        uses: azure/CLI@v1
        with: 
          azcliversion: 2.39.0
          inlineScript: |
            ACR_NAME=$(a=$(az acr list --query '[0].name' -o tsv))
            LOGIN=$(az acr login --name $ACR_NAME --expose-token)
            ACR_ACCESS_TOKEN=$(echo $LOGIN | jq -r '.accessToken')
            ACR_LOGIN_SERVER=$(echo $LOGIN | jq -r '.loginServer')
            echo "::add-mask::$ACR_ACCESS_TOKEN"
            echo "::set-output name=ACR_ACCESS_TOKEN::$ACR_ACCESS_TOKEN"
            echo "::set-output name=ACR_LOGIN_SERVER::$ACR_LOGIN_SERVER"

      - name: Docker Login
        run: |
          docker login ${{ steps.acr-login.outputs.ACR_LOGIN_SERVER }} --username 00000000-0000-0000-0000-000000000000 --password ${{ steps.acr-login.outputs.ACR_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.acr-login.outputs.ACR_LOGIN_SERVER }}/bicep-app-service-container:latest

      - name: deploy app service
        id: deploy-app-service
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./infrastructure/bicep/main.bicep
          parameters: ./infrastructure/ghb/deploy-app-service.json dockerRegistryHost=${{ steps.acr-login.outputs.ACR_LOGIN_SERVER }} dockerImage=bicep-app-service-container:latest
          failOnStdErr: false